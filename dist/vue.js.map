{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/globalAPI.js","../src/observe/dep.js","../src/observe/array.js","../src/observe/index.js","../src/observe/watcher.js","../src/state.js","../src/compiler/parse.js","../src/compiler/index.js","../src/vdom/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["// 定义策略\r\nconst starts = {};\r\nconst LIFECYCLE = [\"beforeCreate\", \"created\", \"mounted\", \"beforeMount\"];\r\nLIFECYCLE.forEach((hook) => {\r\n    starts[hook] = function (parent, child) {\r\n        // 第一次 { } + {create:function(){}}   ==>  {created:[fn]}\r\n        // 第二次 {created:[fn]} + {create:function(){}}  ==>  {created:[fn, fn]}\r\n        if (child) {\r\n            if (parent) {\r\n                return parent.concat[child];\r\n            } else {\r\n                return [child];\r\n            }\r\n        } else {\r\n            return parent;\r\n        }\r\n    };\r\n});\r\n\r\n// 组件合并策略, 对传入的组件构建父子关系\r\nstarts.components = function (parentVal, childVal) {\r\n    const res = Object.create(parentVal);\r\n    if (childVal) {\r\n        for (let key in childVal) {\r\n            res[key] = childVal[key];\r\n        }\r\n    }\r\n    // 优先找自己，再找原型上的\r\n    return res;\r\n};\r\n\r\nexport function mergeOptions(parent, child) {\r\n    const options = {};\r\n\r\n    // 对传进来的连个进行遍历，传入mergeField\r\n    for (let key in parent) {\r\n        mergeField(key);\r\n    }\r\n    for (let key in child) {\r\n        if (!parent.hasOwnProperty(key)) {\r\n            mergeField(key);\r\n        }\r\n    }\r\n\r\n    function mergeField(key) {\r\n        // 用策略模式减少 if else\r\n        if (starts[key]) {\r\n            options[key] = starts[key](parent[key], child[key]);\r\n        } else {\r\n            // 如果不在策略中，则以儿子的为主，优先采用儿子的\r\n            options[key] = child[key] || parent[key];\r\n        }\r\n    }\r\n    return options;\r\n}\r\n","import { mergeOptions } from \"./utils\";\r\nexport function initGlobalAPI(Vue) {\r\n    // mixin 和 options 是静态方法\r\n\r\n    Vue.options = {\r\n        _base: Vue,\r\n    };\r\n\r\n    // 订阅模式\r\n    Vue.mixin = function (mixin) {\r\n        // 我们期望将用用户的选项和全局的 options进行合并\r\n        this.options = mergeOptions(this.options, mixin);\r\n    };\r\n\r\n    // 简单的通过继承的方式 实现子组件创建的api Vue.extend\r\n    // 用法：\r\n    // let Sub = Vue.extend({\r\n    //     template: '<button>dianwoa</button>'\r\n    // });\r\n    // new Sub().$mount('#app')\r\n\r\n    // 用来创建组建的构造函数，new之后可以挂载\r\n    Vue.extend = function (options) {\r\n        function Sub() {\r\n            this._init((options = {}));\r\n        }\r\n        Sub.prototype = Object.create(Vue.prototype);\r\n        Sub.prototype.constructor = Sub;\r\n\r\n        // 希望将用户传入的参数 和全局的 Vue.options 来合并\r\n        Sub.options = mergeOptions(Vue.options, options); //mergeOptions(this.constructor.options, options)\r\n        return Sub;\r\n    };\r\n\r\n    // 注册组件\r\n    Vue.options.components = {};\r\n    Vue.component = function (id, definition) {\r\n        // 如果definition已经是一个函数了，说明用户自己调用了 Vue.extend\r\n\r\n        definition =\r\n            typeof definition === \"function\"\r\n                ? definition\r\n                : Vue.extend(definition);\r\n        Vue.options.components[id] = definition;\r\n        console.log(Vue.options);\r\n    };\r\n}\r\n","let id = 0;\r\nclass Dep {\r\n    constructor() {\r\n        this.id = id++;\r\n        this.subs = []; //这里要存放 属性对应的watcher\r\n    }\r\n    depend() {\r\n        // 这里我们不希望多次存放同一watcher、\r\n        // this.subs.push(Dep.target)\r\n\r\n        // 先调用watcher的  addDep , 让watcher记住 dep\r\n        Dep.target.addDep(this);\r\n        // 然后 watcher 调用dep的addSubs 让dep记住 watcher\r\n    }\r\n    addSubs(watcher) {\r\n        this.subs.push(watcher);\r\n    }\r\n    notify() {\r\n        this.subs.forEach((watcher) => watcher.update());\r\n    }\r\n}\r\n\r\nDep.target = null;\r\n\r\n// 维护一个用来存放 Dep.target 的 栈结构\r\nlet stack = [];\r\nexport function pushTarget(target) {\r\n    Dep.target = target;\r\n    stack.push(target);\r\n}\r\n\r\nexport function popTarget() {\r\n    stack.pop();\r\n    Dep.target = stack[stack.length - 1];\r\n}\r\n\r\nexport default Dep;\r\n\r\n// 依赖手收集\r\n// 1. 在进行挂载时，先new 一个Watcher。 并把 Dep.taget 指向自己。 然后去调用 _render _update\r\n// 2. 在 _update 过程中，会去访问被监听的属性，每个属性都在initState时存了一个闭包的new Dep()\r\n// 3. 被用到的 属性，进入被劫持的get函数时，读取到 Dep.target，就会进行dep和watch的绑定\r\n// 4. 绑定过程 首先调用 dep.depend(), 这里会先让 watcher记住dep， 调用Dep.target.addDep(),在watch中进行去重。\r\n// 5. 如果没有重复就接着让 dep记住watcher，调用dep.addSubs()，两边各自存放入自己的数组中，实现依赖收集\r\n","// 重写数组中的部分方法\r\n\r\nlet oldArrayProto = Array.prototype;\r\n\r\nexport let newArrayProto = Object.create(oldArrayProto);\r\n\r\nlet methods = [\"push\", \"pop\", \"shift\", \"unshift\", \"reverse\", \"sort\", \"splice\"];\r\n\r\nmethods.forEach((method) => {\r\n    // 重写数组方法，内部调用自定义方法\r\n    newArrayProto[method] = function (...args) {\r\n        // todo...\r\n        console.log(`调用了${method}`);\r\n        const result = oldArrayProto[method].call(this, ...args);\r\n\r\n        // 这里的 this 值得是方法中的this，指向的是调用方法的东西，就是我们传来的data\r\n        let ob = this.__ob__; //拿出数组中存放的 Observe构造函数 ，调用它的 observeArray 方法\r\n\r\n        // 对新增的数据再进行劫持。（通过方法新增的内容）\r\n        let inserted;\r\n        switch (method) {\r\n            case \"push\":\r\n            case \"unshift\":\r\n                inserted = args;\r\n                break;\r\n            case \"splice\":\r\n                inserted = args.slice(2);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        // 获取到添加进去的参数，inserted，但它为数组，需要在调用监听数组的方法\r\n        if (inserted) {\r\n            ob.observeArray(inserted);\r\n        }\r\n        ob.dep.notify(); //调用了数组方法，通知对应watcher 实现更新操作\r\n\r\n        return result;\r\n    };\r\n});\r\n","import { newArrayProto } from \"./array\";\r\nimport Dep from \"./dep\";\r\n\r\nclass Observer {\r\n    constructor(data) {\r\n        //给每个对象都增加一个收集功能\r\n        this.dep = new Dep();\r\n\r\n        // Object.defineProperty只能劫持已经存在的属性，后增的，或者删除的,不知道\r\n\r\n        // data.__ob__ = this; //自定义对象属性，把当前的构造函数当作属性给了 传过来的对象\r\n        // 但如果赋值定义ob这个对象，就会一直被遍历死循环，可以将它变为不可枚举的\r\n        Object.defineProperty(data, \"__ob__\", {\r\n            value: this, //__ob__的值就是 Observe实例\r\n            enumerable: false, //将 __ob__ 变成不可枚举\r\n        });\r\n\r\n        if (Array.isArray(data)) {\r\n            // 重写数组方法。7个可以修改数组本身的方法。并将数组中的引用类型劫持\r\n            // 需要保留原有的数组特性，修改部分方法，并设定在触发时调用 notify\r\n            data.__proto__ = newArrayProto;\r\n            this.observeArray(data);\r\n        } else {\r\n            // 不是对象的话直接走walk循环遍历对象\r\n            this.walk(data);\r\n        }\r\n    }\r\n    walk(data) {\r\n        //循环对象，对属性依次劫持\r\n        // 重新定义属性\r\n        Object.keys(data).forEach((key) =>\r\n            defineReactive(data, key, data[key])\r\n        );\r\n    }\r\n\r\n    observeArray(data) {\r\n        // 对数组中的每一项进行一个监听\r\n        // 如果数组中存在对象，也能检测到。\r\n        data.forEach((item) => {\r\n            observe(item);\r\n        });\r\n    }\r\n}\r\n\r\nfunction dependArray(value) {\r\n    for (let i = 0; i < value.length; i++) {\r\n        let current = value[i];\r\n        current.__ob__ && current.__ob__.dep.depend();\r\n        if (Array.isArray(current)) {\r\n            dependArray(current);\r\n        }\r\n    }\r\n}\r\n\r\nexport function defineReactive(target, key, value) {\r\n    //属性劫持\r\n    // 这个环境由于value 构成了一个闭包\r\n\r\n    let childOb = observe(value); //递归的对所有的对象进行劫持  childOb.dep,用来收集对象本身的依赖\r\n    let dep = new Dep(); // 每一个属性都有一个dep 并不会被销毁\r\n    Object.defineProperty(target, key, {\r\n        get() {\r\n            //取值执行\r\n            // get值添加依赖，没有get的就不会被添加。set值触发notify\r\n            if (Dep.target) {\r\n                dep.depend(); //让当前的dep实例记住 Dep.target 上的 watcher，\r\n                if (childOb) {\r\n                    //如果值是一个对象或者数组的话，那么整个 value 也会被添加 dep\r\n                    childOb.dep.depend(); //让数组和对象本身也具有依赖和 渲染watch, 但这里只是让最外层的调用了depend，内部的还没有\r\n\r\n                    // 深层次进行递归 让数组中的数组调用depend\r\n                    if (Array.isArray(value)) {\r\n                        // 对数组中的数组也进行dep收集\r\n                        dependArray(value);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return value;\r\n        },\r\n        set(newValue) {\r\n            //设置值\r\n            if (newValue === value) return;\r\n            value = newValue;\r\n            dep.notify(); //设置值时通知更新视图\r\n        },\r\n    });\r\n}\r\n\r\n// 初始化响应式数据时先进过这里\r\nexport function observe(data) {\r\n    // 对数据进行劫持\r\n\r\n    if (typeof data !== \"object\" || data == null) {\r\n        return; //只对对象进行劫持，如果不是对象就返回\r\n    }\r\n\r\n    //如果一个对象被劫持过了，就不需要再劫持了(可以通过增添一个实例判断是否被劫持)\r\n    if (data.__ob__ instanceof Observer) {\r\n        return data.__ob__;\r\n    }\r\n\r\n    // 返回Observe实例\r\n    return new Observer(data);\r\n}\r\n","import Dep, { popTarget, pushTarget } from \"./dep\";\r\n\r\nlet id = 0;\r\n\r\n// 每个属性有一个 dep （属性就是被观察者），watcher就是观察者（属性变化了会同通知观察者来更新） ===> 观察者模式\r\nclass Watcher {\r\n    //不同组件有不同的watcher 目前只有一个渲染根实例\r\n\r\n    constructor(vm, exprOrFn, options, cb) {\r\n        // option 有三种  直接为true：标识这是渲染watcher\r\n        //               {lazy: true} 标识是一个计算属性watcher。exprOrFn 是得到值的函数\r\n        //               {user: true} 标识这是一个 监听属性的watcher，他会有第四个参数 cb，属性变化时的回调\r\n        this.id = id++;\r\n        this.vm = vm;\r\n\r\n        if (typeof exprOrFn === \"string\") {\r\n            //使用watch监听属性时这里可能是字符串\r\n            this.getter = function () {\r\n                return vm[exprOrFn]; // 这里取值会进行依赖收集\r\n            };\r\n        } else {\r\n            this.getter = exprOrFn; //getter意味着 调用这个函数 可以发生取值操作\r\n        }\r\n\r\n        this.renderWatcher = options; // 是否是一个渲染Watchetr\r\n        this.deps = []; //让watcher记住dep，后续实现计算属性，和一些清理工作需要用到\r\n        this.depsId = new Set();\r\n        this.lazy = options.lazy; //控制是否不立即执行get, 用于computed\r\n        this.dirty = this.lazy; //缓存值 初始值为ture / undefined\r\n\r\n        // 如果是lazy就不取值，否则就去调用get() 用在computed计算缓存 和 渲染watch时执行\r\n        this.value = this.lazy ? undefined : this.get();\r\n\r\n        this.user = options.user; // 用来判断是否是 watch监听属性的 watcher\r\n        this.cb = cb;\r\n    }\r\n\r\n    // 对监听属性的求值\r\n    evaluate() {\r\n        this.value = this.get();\r\n        this.dirty = false;\r\n    }\r\n\r\n    get() {\r\n        // 渲染watch调用get方法就可以渲染视图\r\n        //\r\n        pushTarget(this); //把当前的 watcher实例，放到 Dep的静态属性上。\r\n        let value = this.getter.call(this.vm); //回去vm上取值\r\n        popTarget(); //取值完毕后清空\r\n        return value;\r\n    }\r\n\r\n    addDep(dep) {\r\n        let id = dep.id;\r\n        if (!this.depsId.has(id)) {\r\n            this.deps.push(dep);\r\n            this.depsId.add(id);\r\n            // watcher记住dep并进行去重\r\n            dep.addSubs(this); //再调用dep的 addSubs记住watcher\r\n        }\r\n    }\r\n    depend() {\r\n        //在这里取出 deps 遍历去 depend 当前的Dep.target\r\n        let i = this.deps.length;\r\n        while (i--) {\r\n            this.deps[i].depend();\r\n        }\r\n    }\r\n\r\n    // dep.notify 会掉用相关的 watch.update进行数据更新\r\n    update() {\r\n        if (this.lazy) {\r\n            // 如果是计算属性， 依赖变化了触发notice，就把脏值标识为 true 再次求值\r\n            this.dirty = true;\r\n        } else {\r\n            // 对更新操作进行异步处理\r\n            // this.get()\r\n            queueWatcher(this); //把传入的watcher暂存起来\r\n        }\r\n    }\r\n\r\n    run() {\r\n        let oldValue = this.value;\r\n        let newValue = this.get();\r\n        // 如果是 watch 属性的话，还会执行相应的回调\r\n        if (this.user) {\r\n            this.cb.call(this.vm, newValue, oldValue);\r\n        }\r\n    }\r\n}\r\n\r\n// 异步批处理\r\nlet queue = [];\r\nlet has = {};\r\nlet pending = false; //防抖\r\n\r\n// 对存储的 watcher 进行遍历更新\r\nfunction flushSchedulerQueue() {\r\n    let flushQueue = queue.slice(0); //把queue里面的1 watch 都拿出来 挨个调用run\r\n    flushQueue.forEach((q) => q.run());\r\n    queue = [];\r\n    has = {};\r\n    pending = false;\r\n}\r\n\r\nfunction queueWatcher(watcher) {\r\n    const id = watcher.id;\r\n    // 对同一个页面的多次改变去重\r\n    if (!has[id]) {\r\n        queue.push(watcher);\r\n        has[id] = true;\r\n        // 不管执行多少次数据的变化,但最终只执行一轮刷新操作，放到一起更新\r\n        if (!pending) {\r\n            nextTick(flushSchedulerQueue, 0);\r\n            pending = true;\r\n        }\r\n    }\r\n}\r\n\r\n// 异步批处理\r\nlet callbacks = [];\r\nlet waiting = false;\r\nfunction flushCallbacks() {\r\n    waiting = false;\r\n    let cbs = callbacks.slice(0);\r\n    cbs.forEach((cb) => cb()); // 遍历执行所有的 nextTick回调\r\n    callbacks = [];\r\n}\r\n\r\n// nextTick中没有直接使用哪个 api ，而是采用优雅降级的方法\r\n// 内部采用的是 promise > MutationObserver(h5的api) > (ie专享的)setImmediate > (宏任务)setTimeout\r\n// 如下\r\nlet timmerFunc;\r\nif (Promise) {\r\n    timmerFunc = () => {\r\n        Promise.resolve().then(flushCallbacks);\r\n    };\r\n} else if (MutationObserver) {\r\n    // 通过函数改变 监听元素的值 从而达到触发回调的功能\r\n    let observer = new MutationObserver(flushCallbacks); //这里传入的回调时异步执行的\r\n    let textNode = document.createTextNode(1);\r\n    observer.observe(textNode, {\r\n        characterData: true,\r\n    });\r\n    timmerFunc = () => {\r\n        textNode.textContent = 2;\r\n    };\r\n} else if (setImmediate) {\r\n    timmerFunc = () => {\r\n        setImmediate(flushCallbacks);\r\n    };\r\n} else {\r\n    timmerFunc = () => {\r\n        setTimeout(flushCallbacks, 0);\r\n    };\r\n}\r\n\r\n// 用 nextTick将任务存到一个异步队列中\r\nexport function nextTick(cb) {\r\n    callbacks.push(cb); //维护 nextTick中的 callback数组，最后一起 执行\r\n    if (!waiting) {\r\n        // setTimeout(() => {\r\n        //     flushCallbacks()\r\n        // }, 0)\r\n        timmerFunc();\r\n\r\n        waiting = true;\r\n    }\r\n}\r\n\r\n// 需要给每一个属性增加一个 dep， 目的就是为了收集 Watcher\r\n// 让属性收集他所依赖的watcher\r\n\r\n// 一个视图有多个属性, 一个watcher 对应多个 dep ，一个dep 也可以对应多个视图。\r\n// 多对多的关系\r\n\r\nexport default Watcher;\r\n","import Dep from \"./observe/dep\";\r\nimport { observe } from \"./observe/index\";\r\nimport Watcher, { nextTick } from \"./observe/watcher\";\r\n\r\nexport function initState(vm) {\r\n    const opts = vm.$options;\r\n    if (opts.data) {\r\n        initData(vm);\r\n    }\r\n    if (opts.computed) {\r\n        initComputed(vm);\r\n    }\r\n    if (opts.watch) {\r\n        initWatch(vm);\r\n    }\r\n}\r\n\r\n// 检测watch\r\nfunction initWatch(vm) {\r\n    let watch = vm.$options.watch;\r\n    for (let key in watch) {\r\n        const handler = watch[key]; //字符串，数组，函数三种\r\n        if (Array.isArray(handler)) {\r\n            // 如果是数组的话就遍历展开\r\n            for (let i = 0; i < handler.length; i++) {\r\n                createWatcher(vm, key, handler);\r\n            }\r\n        } else {\r\n            createWatcher(vm, key, handler);\r\n        }\r\n    }\r\n}\r\n\r\nfunction createWatcher(vm, key, handler) {\r\n    // 字符串 函数\r\n    if (typeof handler === \"string\") {\r\n        handler = vm[handler];\r\n    }\r\n    return vm.$watch(key, handler);\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[target][key];\r\n        },\r\n        set(newValue) {\r\n            vm[target][key] = newValue;\r\n        },\r\n    });\r\n}\r\n\r\n// 初始化响应式数据\r\nfunction initData(vm) {\r\n    let data = vm.$options.data; //data可能是函数或者对象\r\n\r\n    data = typeof data === \"function\" ? data.call(vm) : data;\r\n    vm._data = data;\r\n\r\n    // 把自定义的data 进行劫持，并覆给 vm上的 _data，并进行 dep收集\r\n    observe(data);\r\n\r\n    // 将vm的_data用 vm 代理\r\n    for (let key in data) {\r\n        // 把 data 上的值放到 _data 上面\r\n        proxy(vm, \"_data\", key);\r\n    }\r\n}\r\n\r\n// 注册计算属性\r\nfunction initComputed(vm) {\r\n    const computed = vm.$options.computed;\r\n    const watcher = (vm._computedWatchers = {}); //将计算属性的watcher保存到vm上\r\n    // computed可能有两种形式， 对象和函数，需要分开处理\r\n    for (let key in computed) {\r\n        let userDef = computed[key];\r\n\r\n        // 如果是函数的话就是 get 函数，如果不是的话就拿到对象的get函数\r\n        let fn = typeof userDef === \"function\" ? userDef : userDef.get;\r\n        // 用lazy标注是一个计算属性watcher，并把这个watcher存起来\r\n        watcher[key] = new Watcher(vm, fn, { lazy: true });\r\n\r\n        defineComputed(vm, key, userDef);\r\n    }\r\n}\r\n\r\n// 对这个 监听属性 进行定义get'set\r\nfunction defineComputed(target, key, userDef) {\r\n    // let getter = typeof userDef === 'function' ? userDef : userDef.get;\r\n    let setter = userDef.set || (() => {});\r\n\r\n    // 定义完之后，可以在实例上拿到对应的属性\r\n    Object.defineProperty(target, key, {\r\n        // 取值调用的是createComputedGetter\r\n        get: createComputedGetter(key),\r\n        set: setter,\r\n    });\r\n}\r\n\r\n// 定义计算属性的get'方法\r\nfunction createComputedGetter(key) {\r\n    // 检测是否要执行这个getter\r\n    return function () {\r\n        const watcher = this._computedWatchers[key]; // 获取到对应属性的watcher\r\n        if (watcher.dirty) {\r\n            // dirty初始值为 true，求值之后变为false。之后触发 依赖属性的 notify时再变为true\r\n            //利用watch中的 dirty 设置缓存功能\r\n            watcher.evaluate(); //求值后 dirty 变味了 false，下次就不求值了\r\n        }\r\n        // 如果watcher栈还有内容的话\r\n        if (Dep.target) {\r\n            watcher.depend(); //让当前 计算属性watcher里面的 dep 也去收集上层的其他渲染watcher\r\n        }\r\n        return watcher.value;\r\n    };\r\n}\r\n\r\n// 创建 $nextTick $watch\r\nexport function initStateMixin(Vue) {\r\n    Vue.prototype.$nextTick = nextTick;\r\n    Vue.prototype.$watch = function (exprOrFn, cb) {\r\n        // exprOrFn 的值变化了，就触发对应的回调\r\n        // exprOrFn是键名， cb是回调函数\r\n        new Watcher(this, exprOrFn, { user: true }, cb);\r\n    };\r\n}\r\n","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnaneCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\n// 匹配到的分组是一个 标签名 <div <xxx\r\nconst startTagOpen = new RegExp(`^<${qnaneCapture}`);\r\n// 匹配结束标签  匹配 </xxx>\r\nconst endTag = new RegExp(`<\\\\/${qnaneCapture}[^>]*>`);\r\n// 匹配属性 第一个分组时key，value是剩下的  3 或4 或5\r\nconst attribute =\r\n    /^\\s([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\r\nconst startTagClose = /^\\s*(\\/?)>/;\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\n\r\n// vue3用的不是正则\r\n\r\n/** parseHTML\r\n *  将html转换为 ast语法树\r\n *\r\n * @export\r\n * @param {*} html\r\n * @return {*}\r\n */\r\nexport function parseHTML(html) {\r\n    // 匹配开始标签,并对标签和属性存储\r\n    function parseStartTag() {\r\n        // string.match(regexp) 用正则表达式匹配字符串，并返回包含搜索结果的数组。\r\n        // 进来后先判断是否是开始标签(<div>)\r\n        const start = html.match(startTagOpen);\r\n        // 如果匹配到是开始的元素，就进行存储和前进\r\n        // start结构: <div为例 start: [\"<div\",'div']\r\n        if (start) {\r\n            const Match = {\r\n                tagName: start[1], //标签名\r\n                attrs: [],\r\n            };\r\n            advance(start[0].length);\r\n\r\n            //  匹配完开头的 <div 就接着一直匹配，直到找到 开始标签的结束 >, 并且把其中匹配到的 属性 存起来\r\n            let attr, end;\r\n            while (\r\n                !(end = html.match(startTagClose)) &&\r\n                (attr = html.match(attribute))\r\n            ) {\r\n                advance(attr[0].length);\r\n                // 属性解析出来后 放到 match.attrs中\r\n\r\n                Match.attrs.push({\r\n                    name: attr[1],\r\n                    value: attr[3] || attr[4] || attr[5] || true,\r\n                });\r\n            }\r\n            // 匹配完属性之后，end就会被匹配到，这里再把end的 > 删掉\r\n            if (end) {\r\n                advance(end[0].length);\r\n            }\r\n            // 把当前标签的 属性和标签就匹配结束了\r\n            return Match;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // 删除html\r\n    function advance(length) {\r\n        // 把匹配完的html删掉\r\n        html = html.substring(length);\r\n    }\r\n\r\n    // 利用栈结构 构造一棵树\r\n    const ELEMENT_TYPE = 1;\r\n    const TEXT_TYPE = 3;\r\n    const stack = [];\r\n    let currentParent;\r\n    let root;\r\n\r\n    function createASTElement(tag, attrs) {\r\n        return {\r\n            tag,\r\n            attrs,\r\n            parent: null,\r\n            children: [],\r\n            type: ELEMENT_TYPE,\r\n        };\r\n    }\r\n\r\n    // 下面三个函数用来吧匹配到的内容进行整合，最后要转化为一颗抽象语法树\r\n    function start(tag, attrs) {\r\n        let node = createASTElement(tag, attrs);\r\n        if (!root) {\r\n            //看一下这棵树是否为空，\r\n            root = node; //如果为空，则当前就是树的根节点\r\n        }\r\n        if (currentParent) {\r\n            node.parent = currentParent;\r\n            currentParent.children.push(node);\r\n        }\r\n        stack.push(node);\r\n        currentParent = node; // currentParent 为栈中的最后一个元素\r\n    }\r\n    function chars(text) {\r\n        // 把全空的文本去掉(全空的文本是不会被显显示的)\r\n        text = text.replace(/\\s/g, \"\");\r\n        text &&\r\n            currentParent.children.push({\r\n                text,\r\n                type: TEXT_TYPE,\r\n                parent: currentParent,\r\n            });\r\n    }\r\n    function end(tag) {\r\n        stack.pop();\r\n        currentParent = stack[stack.length - 1];\r\n    }\r\n\r\n    while (html) {\r\n        // 如果textEnd 为0，说明是一个开始标签(<div>) 或一个结束标签(</div>)\r\n        // 如果textEnd >0 说明就是文本的结束位置(aaa<div>)\r\n        let textEnd = html.indexOf(\"<\"); //如果返回的索引是0，则说明是个标签，在开头\r\n\r\n        if (textEnd == 0) {\r\n            const startTagMatch = parseStartTag(); //开始标签的匹配结果\r\n\r\n            if (startTagMatch) {\r\n                // 如果是开始标签就跳过了\r\n                start(startTagMatch.tagName, startTagMatch.attrs);\r\n                continue;\r\n            }\r\n            //到这里就是结束标签(如果是开始标签的话就被删掉 continue了)\r\n            let endTagMatch = html.match(endTag);\r\n            if (endTagMatch) {\r\n                end(endTagMatch[1]);\r\n                advance(endTagMatch[0].length);\r\n                continue;\r\n            }\r\n        }\r\n        // 开始标签匹配 text\r\n        if (textEnd > 0) {\r\n            // 轮到了文本内容\r\n            let text = html.substring(0, textEnd);\r\n            if (text) {\r\n                chars(text);\r\n                advance(text.length);\r\n            }\r\n        }\r\n    }\r\n    return root;\r\n}\r\n","import { parseHTML } from \"./parse\";\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\n\r\n// 将ast树转换为 字符串代码 _c( _v() _s())\r\nfunction codeGen(ast) {\r\n    let children = genChildren(ast.children);\r\n    let code = `_c('${ast.tag}',${\r\n        ast.attrs.length > 0 ? genProps(ast.attrs) : null\r\n    }${ast.children.length > 0 ? `,${children}` : \"\"})`;\r\n    return code;\r\n}\r\n\r\n// 转换 属性 >>> 字符串\r\nfunction genProps(attrs) {\r\n    let str = \"\";\r\n    // let str = ''\r\n    for (let i = 0; i < attrs.length; i++) {\r\n        let attr = attrs[i];\r\n\r\n        // 解析样式时，将字符串形式转换为对象形式\r\n        if (attr.name === \"style\") {\r\n            let obj = {};\r\n            let arr = attr.value.split(\";\").forEach((item) => {\r\n                let [key, value] = item.split(\":\");\r\n                obj[key] = value;\r\n            });\r\n            attr.value = obj;\r\n        }\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},`;\r\n    }\r\n\r\n    return `{${str.slice(0, -1)}}`;\r\n}\r\n\r\n// 转换 children 遍历传递给gen函数进行处理\r\nfunction genChildren(children) {\r\n    return children.map((child) => gen(child));\r\n}\r\n\r\n// 处理传递来的child节点  处理分为 文本 和 element，\r\nfunction gen(node) {\r\n    if (node.type === 1) {\r\n        // 如果子元素时 节点 就直接调用\r\n        return codeGen(node);\r\n    } else {\r\n        // 子元素时文本时有 3种情况， {{name}} hello , {{age}}, 111\r\n\r\n        let text = node.text;\r\n        // 先判断是不是纯文本\r\n        if (!defaultTagRE.test(text)) {\r\n            // 纯文本直接用 _v\r\n            return `_v(${JSON.stringify(text)})`;\r\n        } else {\r\n            // 当有 {{}} 就得多加一个 _s 例如： _v(_s(name)+'hello' + _s(name))\r\n            let tokens = [];\r\n            let match;\r\n            defaultTagRE.lastIndex = 0;\r\n            let lastIndex = 0;\r\n            while ((match = defaultTagRE.exec(text))) {\r\n                // match : [ \"{{age}}\", \"age\" ]\r\n\r\n                // 匹配到 {{}} 时的索引\r\n                let index = match.index;\r\n                // 将0 - {{}} 或是 {{}} - {{}}中间的存进去\r\n                if (index > lastIndex) {\r\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)));\r\n                }\r\n\r\n                // 添加匹配到的 {{}}\r\n                tokens.push(`_s(${match[1].trim()})`);\r\n\r\n                lastIndex = index + match[0].length;\r\n            }\r\n            // 把最后一个 {{}} 之后的东西 也存进来\r\n            if (lastIndex < text.length) {\r\n                tokens.push(JSON.stringify(text.slice(lastIndex)));\r\n            }\r\n            return `_v(${tokens.join(\"+\")})`;\r\n        }\r\n    }\r\n}\r\n\r\n/** compileToFunction\r\n *  将模板template 转换为 render函数\r\n *  其中将 html 转化为 ast树，又将 ast树转换为由 _v _s 组成的函数字符串，并用 new Function的方式返回 即是render函数\r\n * @export\r\n * @param {*} template\r\n * @return {*}\r\n */\r\nexport function compileToFunction(template) {\r\n    // 1. 就是将template 转换为 ast 语法树\r\n    let ast = parseHTML(template);\r\n\r\n    // 2. 生成render方法（render方法执行后的返回结果就是 虚拟DOM）\r\n\r\n    let code = codeGen(ast); // 由ast树生成的 code 代码, 字符串代码\r\n    code = `with(this){return ${code}}`;\r\n\r\n    // render 得到的时一个 new 出来的 with函数，   new function可以传入字符串作为函数体\r\n    let render = new Function(code);\r\n\r\n    // 生成render函数，返回给option.render\r\n    return render;\r\n}\r\n","// _c\r\nexport function createElementVNode(vm, tag, data, ...children) {\r\n    if (data == null) {\r\n        data = {};\r\n    }\r\n    let key = data.key;\r\n    if (key) {\r\n        delete data.key;\r\n    }\r\n\r\n    if (isReservedTag(tag)) {\r\n        return vnode(vm, tag, key, data, children, undefined);\r\n    } else {\r\n        // 拿到组件的 构造函数(全局调用时) / 组件的options选项(组件内使用时)\r\n        let Ctor = vm.$options.components[tag];\r\n        console.log('vm.$options',vm.$options,tag)\r\n\r\n        // Ctor就是组件的定义 可能是一个 Sub 类，也有可能是组件的obj选项\r\n        // 创造一个组件的虚拟节点 (包含组件的构造函数)\r\n        return createComponentVnode(vm, tag, key, data, children, Ctor);\r\n    }\r\n}\r\n\r\nfunction createComponentVnode(vm, tag, key, data, children, Ctor) {\r\n    // 把没有包装的对象包装一下，都成了一个构造函数\r\n    if (typeof Ctor === \"object\") {\r\n        Ctor = vm.$options._base.extend(Ctor);\r\n    }\r\n    console.log('Ctor',Ctor)\r\n    data.hook = {\r\n        // 定义一个init方法，再创建真实节点时候吗，如果是组件则调用此方法\r\n        init(vnode) {\r\n            // 保存组件的实例到虚拟节点上\r\n            console.log(vnode)\r\n            vnode.componentInstance = new vnode.componentOptions.Ctor;\r\n            let instance = vnode.componentInstance;\r\n            instance.$mount(); //走完这个 instance.$el 上就会有对应的真实dom\r\n        },\r\n    };\r\n\r\n    return vnode(vm, tag, key, data, children, null, { Ctor });\r\n}\r\n\r\n// _v\r\nexport function createTextVNode(vm, text) {\r\n    return vnode(vm, undefined, undefined, undefined, undefined, text);\r\n}\r\n\r\nfunction vnode(vm, tag, key, data, children, text, componentOptions) {\r\n    // vnode 返回虚拟节点\r\n    return {\r\n        vm,\r\n        tag,\r\n        key,\r\n        data,\r\n        children,\r\n        text,\r\n        componentOptions, // 这里饱含着组件的 构造函数\r\n        // ......\r\n        // ast是语法层面的解析，解析html的内容\r\n        // 虚拟dom是节点层面，争对一个dom，可以增加各种内容\r\n    };\r\n}\r\n\r\nexport function isSameVnode(vnode1, vnode2) {\r\n    return vnode1.tag === vnode2.tag && vnode1.key === vnode2.key;\r\n}\r\n\r\n// 判断是否为原始元素\r\nconst isReservedTag = (tag) => {\r\n    return [\"a\", \"li\", \"span\", \"p\", \"button\", \"ul\",'div'].includes(tag);\r\n};\r\n","import { isSameVnode } from \"./index\";\r\n\r\n// 去调用虚拟节点上的 init 来创建dom\r\nfunction createComponent(Vnode) {\r\n    let i = Vnode.data;\r\n    if ((i = i.hook) && (i = i.init)) {\r\n        i(Vnode);\r\n    }\r\n    if (Vnode.componentInstance) {\r\n        return true;\r\n    }\r\n}\r\n\r\n/** createElm\r\n *  由patch函数调用，用于将 虚拟节点递归转换为真实节点\r\n * @param {*} VNode\r\n * @return {*} 返回真实 dom\r\n */\r\nexport function createElm(VNode) {\r\n    const { tag, data, children, text } = VNode;\r\n    if (typeof tag === \"string\") {\r\n        // 创建真实元素，也要区分是组件还是元素\r\n        if (createComponent(VNode)) {\r\n            //是组件 同时也存在 vnode.componentInstance.$el\r\n            return VNode.componentInstance.$el;\r\n        }\r\n        //元素标签\r\n        VNode.el = document.createElement(tag); //方便日后进行diff比较，把真实dom和虚拟dom进行挂载\r\n\r\n        // 进行属性的挂载\r\n        patchProps(VNode.el, {}, data);\r\n\r\n        children.forEach((child) => {\r\n            VNode.el.appendChild(createElm(child));\r\n        });\r\n    } else {\r\n        //文本\r\n        VNode.el = document.createTextNode(text);\r\n    }\r\n    return VNode.el;\r\n}\r\n\r\n/** patchProps挂载属性\r\n *  在 createElm中用于将虚拟dom的属性挂载到真实dom上\r\n * @param {*} el\r\n * @param {*} props\r\n */\r\nexport function patchProps(el, oldProps = {}, props = {}) {\r\n    // 老属性中有，新的中没有，要删除老的\r\n    // style\r\n    let oldStyles = oldProps.style || {};\r\n    let newStyle = props.style || {};\r\n    for (let key in oldStyles) {\r\n        if (!newStyle[key]) {\r\n            // 没有就滞空，有就等到下面被替换\r\n            el.style[key] = \"\";\r\n        }\r\n    }\r\n\r\n    //普通属性\r\n    for (let key in oldProps) {\r\n        if (!props[key]) {\r\n            //新的没有，删除属性\r\n            el.removeAttribute(key);\r\n        }\r\n    }\r\n\r\n    // 新的覆盖老的\r\n    for (let key in props) {\r\n        if (key === \"style\") {\r\n            for (let styleName in props.style) {\r\n                el.style[styleName] = props.style[styleName];\r\n            }\r\n        } else {\r\n            el.setAttribute(key, props[key]);\r\n        }\r\n    }\r\n}\r\n\r\n/** patch函数\r\n * 作用：第一次挂载虚拟节点 / 更新并挂载新的虚拟节点\r\n *      将虚拟节点（对比）生成真实dom并替换\r\n * @param {*} oldVNode 第一次调用时为真实节点，之后为以前生成的虚拟节点\r\n * @param {*} VNode 虚拟节点\r\n */\r\nexport function patch(oldVNode, VNode) {\r\n    if (!oldVNode) {\r\n        // 当 oldVnode不存在时 就是 el 不存在，该过程是对组件的挂载\r\n        return createElm(VNode); // vm.$el 对应的就是组件渲染的结果了\r\n    }\r\n\r\n    // 初渲染时，需要进行判断\r\n    const isRealElement = oldVNode.nodeType; // element.nodeType 是原生方法，如果是element的话 会返回1\r\n    if (isRealElement) {\r\n        // 这里是用虚拟节点替换真实节点\r\n\r\n        const elm = oldVNode;\r\n        let parentElm = elm.parentNode; //真实节点获取他的父节点\r\n        let newelm = createElm(VNode);\r\n        parentElm.insertBefore(newelm, elm.nextSibiling);\r\n        parentElm.removeChild(elm);\r\n        return newelm;\r\n    } else {\r\n        return patchVnode(oldVNode, VNode);\r\n    }\r\n}\r\n\r\n// 新旧dom比较的过程\r\nfunction patchVnode(oldVNode, VNode) {\r\n    // diff算法 是一个平级比较的过程，父亲和父亲比，儿子和儿子比\r\n    // 1. 两个节点不是同一个节点，直接删除老的换上新的 （没有对比）\r\n    // 2. 两个节点是同一个节点 （判断节点中的tag 和 节点的key） 再比较属性是否有差异，复用老的节点\r\n    // 3. 比较完毕后就需要比较两人的儿子\r\n\r\n    if (!isSameVnode(oldVNode, VNode)) {\r\n        //连个节点不是相同节点时，\r\n        // 进行节点的替换\r\n        let el = createElm(VNode);\r\n        oldVNode.el.parentNode.replaceChild(el, oldVNode.el);\r\n        return el;\r\n    }\r\n\r\n    let el = (VNode.el = oldVNode.el); // 节点相同，复用老节点\r\n\r\n    // 文本的情况\r\n    if (!oldVNode.tag) {\r\n        // 是文本元素\r\n        if (oldVNode.text !== VNode.text) {\r\n            el.textContent = VNode.text; //用新的文本把旧文本覆盖\r\n        }\r\n    }\r\n    // 是相同标签， 再比较标签的属性,\r\n    patchProps(el, oldVNode.data, VNode.data);\r\n\r\n    // 比较儿子 比较的时候： 一方有，一方无；\r\n    //                      两边都有\r\n    let oldChildren = oldVNode.children || [];\r\n    let newChildren = VNode.children || [];\r\n\r\n    if (oldChildren.length > 0 && newChildren.length > 0) {\r\n        // 完整的diff比较\r\n        updateChildren(el, oldChildren, newChildren);\r\n    } else if (newChildren.length > 0) {\r\n        // 没老 有新 全添加\r\n        mountChildren(el, newChildren);\r\n    } else if (oldChildren.length > 0) {\r\n        // 没新 有老 全清空\r\n        el.innerHTML = \"\"; //可以循环删除\r\n    }\r\n    // 最后把转换后的 真实dom:el返回\r\n    return el;\r\n}\r\n\r\n// 老没 新有 全添加\r\nfunction mountChildren(el, newChildren) {\r\n    for (let i = 0; i < newChildren.length; i++) {\r\n        let child = newChildren[i];\r\n        el.appendChild(createElm(child));\r\n    }\r\n}\r\n\r\nfunction updateChildren(el, oldChildren, newChildren) {\r\n    // 我们操作列表 经常会有 push shift pop unshift reverse sort 这种方法，（针对这种方法进行优化）\r\n    // vue2中采用的是双指针的方式 比较两个节点\r\n    // 四个指针\r\n    let oldStartIndex = 0;\r\n    let newStartIndex = 0;\r\n    let oldEndIndex = oldChildren.length - 1;\r\n    let newEndIndex = newChildren.length - 1;\r\n    // 四个指针处的节点\r\n    let oldStartVnode = oldChildren[0];\r\n    let newStartVnode = newChildren[0];\r\n    let oldEndVnode = oldChildren[oldEndIndex];\r\n    let newEndVnode = newChildren[newEndIndex];\r\n\r\n    function makeIndexByKey(children) {\r\n        let map = {};\r\n        children.forEach((child, index) => {\r\n            map[child.key] = index;\r\n        });\r\n        return map;\r\n    }\r\n\r\n    let map = makeIndexByKey(oldChildren);\r\n\r\n    while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\r\n        // 有一方头指针大于尾指针就终止循环\r\n\r\n        // 如果中途遇到了空的children 就掠过\r\n        if (!oldStartVnode) {\r\n            oldStartVnode = oldChildren[++oldStartIndex];\r\n        } else if (!oldEndVnode) {\r\n            oldEndVnode = oldChildren[--oldEndIndex];\r\n        }\r\n\r\n        // 头头比较\r\n        else if (isSameVnode(oldStartVnode, newStartVnode)) {\r\n            patchVnode(oldStartVnode, newStartVnode); // 如果是相同节点，就递归的比较子节点\r\n            oldStartVnode = oldChildren[++oldStartIndex];\r\n            newStartVnode = newChildren[++newStartIndex];\r\n        }\r\n        // 尾尾比较\r\n        else if (isSameVnode(oldEndVnode, newEndVnode)) {\r\n            patchVnode(oldEndVnode, newEndVnode);\r\n            oldEndVnode = oldChildren[--oldEndIndex];\r\n            newEndVnode = newChildren[--newEndIndex];\r\n        }\r\n        // 交叉比对 abcd => dcba 尾头\r\n        else if (isSameVnode(oldEndVnode, newStartVnode)) {\r\n            patchVnode(oldEndVnode, newStartVnode);\r\n            el.insertBefore(oldEndVnode.el, oldStartVnode.el);\r\n            oldEndVnode = oldChildren[--oldEndIndex];\r\n            newStartVnode = newChildren[++newStartIndex];\r\n        }\r\n        // 交叉比对 头尾\r\n        else if (isSameVnode(oldStartVnode, newEndVnode)) {\r\n            patchVnode(oldStartVnode, newEndVnode);\r\n            el.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibiling);\r\n            oldStartVnode = oldChildren[++oldStartIndex];\r\n            newEndVnode = newChildren[--newEndIndex];\r\n        } else {\r\n            // 乱序时候对比\r\n            // 根据老的列表做一个映射关系，用新的去挨个找，找到则移动，找不到则添加，最后多余就删除\r\n            let moveIndex = map[newStartVnode.key]; // 如果拿到说明是我要移动的索引\r\n            if (moveIndex !== undefined) {\r\n                let moveVnode = oldChildren[moveIndex]; //找到对应的虚拟节点复用\r\n                el.insertBefore(moveVnode.el, oldStartVnode.el);\r\n                oldChildren[moveIndex] = undefined; //表示这哥节点已经移动走了\r\n                patchVnode(moveVnode, newStartVnode); // 对比属性和子节点\r\n            } else {\r\n                el.insertBefore(createElm(newStartVnode), oldStartVnode.el);\r\n            }\r\n            newStartVnode = newChildren[++newStartIndex];\r\n        }\r\n    }\r\n\r\n    // 前面的节点一样，newVnode多了一些节点\r\n    if (newStartIndex <= newEndIndex) {\r\n        for (let i = newStartIndex; i <= newEndIndex; i++) {\r\n            let childElm = createElm(newChildren[i]);\r\n            // 参照物 anchor 。 可能是向前追加也可能是向后\r\n            let anchor = newChildren[newEndIndex + 1]\r\n                ? newChildren[newEndIndex + 1].el\r\n                : null; //获取下一个元素的内容\r\n\r\n            el.insertBefore(childElm, anchor); // anchor 为null时候会人为是 appendChind\r\n        }\r\n    }\r\n\r\n    // 前面的节点一样，newVnode少了几个节点\r\n    if (oldStartIndex <= oldEndIndex) {\r\n        for (let i = oldStartIndex; i <= oldEndIndex; i++) {\r\n            let childElm = oldChildren[i].el;\r\n            el.removeChild(childElm);\r\n        }\r\n    }\r\n}\r\n","import { createTextVNode, createElementVNode } from \"./vdom/index\";\r\nimport Watcher from \"./observe/watcher\";\r\nimport { patch } from \"./vdom/patch\";\r\n\r\n/** initLifeCycle\r\n *  在Vue.prototype 上挂载 _update _render _c _v _s 函数\r\n * @export\r\n * @param {*} Vue\r\n */\r\nexport function initLifeCycle(Vue) {\r\n    /** _update\r\n     *  在这里调用 patch函数\r\n     *  将传过来的 Vnode 和 oldVnode 传入patch中\r\n     * @export\r\n     * @param {*} vnode\r\n     */\r\n    Vue.prototype._update = function (vnode) {\r\n        const vm = this;\r\n        const el = vm.$el;\r\n        // patch 既有初始化功能，又有更新的功能\r\n\r\n        const preVnode = vm._vnode; //第二次和以后执行时就可以获取到preVnode\r\n        vm._vnode = vnode; //把第一次执行产生的虚拟节点保存到 _vnode 上\r\n        if (preVnode) {\r\n            vm.$el = patch(preVnode, vnode);\r\n        } else {\r\n            vm.$el = patch(el, vnode);\r\n        }\r\n    };\r\n\r\n    /** _render\r\n     * 执行由 render函数返回的 with _c _v _s\r\n     * 生成虚拟节点\r\n     * @export\r\n     * @param {*} Vue\r\n     */\r\n    Vue.prototype._render = function () {\r\n        const vm = this; // this 是 vue实例\r\n        // 调用render函数时，获取vm中取值，从而将视图和数据绑定在一起\r\n        let vnode = vm.$options.render.call(vm); //我们自定的with(this){return ${code}}\r\n        return vnode;\r\n    };\r\n\r\n    // 创建元素 _c('div', {}, ...children)\r\n    Vue.prototype._c = function () {\r\n        return createElementVNode(this, ...arguments); //这个this时 with中传入的 vm\r\n    };\r\n\r\n    // 创建文本\r\n    Vue.prototype._v = function () {\r\n        return createTextVNode(this, ...arguments);\r\n    };\r\n\r\n    // 文本中的 {{}} _v(text)\r\n    Vue.prototype._s = function (value) {\r\n        if (typeof value !== \"object\") return value;\r\n        return JSON.stringify(value);\r\n    };\r\n}\r\n\r\n//\r\n/** 挂载函数\r\n *  调用 render生成虚拟dom ，再调用update 通过patch进行挂载虚拟dom\r\n *  （第一次调用时被 $mount 调用）\r\n * @export\r\n * @param {*} vm vue实例\r\n * @param {*} el 第一次调用时为真实dom，之后为 生成的虚拟节点\r\n */\r\nexport function mountComponent(vm, el) {\r\n    vm.$el = el;\r\n\r\n    // 组合起来，一起放到 watch 的执行函数中。在下面注册完watcher后就会调用 这个函数\r\n    const updateComponent = () => {\r\n        vm._update(vm._render());\r\n    };\r\n\r\n    // 第一次new Watcher 通过true来指定这是 渲染watcher，然后直接执行渲染\r\n    new Watcher(vm, updateComponent, true); // true用于表示这是一个 渲染watcher\r\n}\r\n\r\n//\r\n/** callHook\r\n *  注册生命周期的钩子函数,在指定位置调用 callHook(vm,hook)\r\n *  就可以在那个位置依次执行被定义的生命周期函数了\r\n * @export\r\n * @param {*} vm\r\n * @param {*} hook\r\n */\r\nexport function callHook(vm, hook) {\r\n    const handlers = vm.$options[hook];\r\n    if (handlers) {\r\n        handlers.forEach((handler) => handler.call(vm));\r\n    }\r\n}\r\n","import { initState } from \"./state\";\r\nimport { compileToFunction } from \"./compiler/index\";\r\nimport { callHook, mountComponent } from \"./lifecycle\";\r\nimport { mergeOptions } from \"./utils\";\r\n\r\nexport function initMixin(Vue) {\r\n    /** _init\r\n     *  调用 initState 和 $mount\r\n     * @export\r\n     * @param {*} Vue\r\n     */\r\n    Vue.prototype._init = function (options) {\r\n        const vm = this;\r\n\r\n        // 把options注册到实例上，\r\n        vm.$options = mergeOptions(this.constructor.options, options);\r\n\r\n        // 在状态初始化之前调用 beforeCreate\r\n        callHook(vm, \"beforeCreate\");\r\n\r\n        // 初始化状态\r\n        initState(vm);\r\n\r\n        // 在状态初始化后 调用create\r\n        callHook(vm, \"created\");\r\n\r\n        if (options.el) {\r\n            vm.$mount(options.el);\r\n            callHook(vm, \"mounted\");\r\n        }\r\n    };\r\n\r\n    Vue.prototype.$mount = function (el) {\r\n        const vm = this;\r\n        el = document.querySelector(el); // 对用户写入的 el 进行 querySelector处理\r\n        let opts = vm.$options;\r\n\r\n        // 首先判断有无 render函数， 下来再有el的情况下，优先选择template 其次才是 innerhtml\r\n\r\n        if (!opts.render) {\r\n            // 先查找是否有 rebnder 函数\r\n            let template;\r\n            if (!opts.template && el) {\r\n                // 如果 options 里没有template 并且找到了 el\r\n                template = el.outerHTML;\r\n            } else {\r\n                //有template 有el， 有template 没el，没templae 没el\r\n                template = opts.template;\r\n            }\r\n            // 写了template 就用 template\r\n            if (template) {\r\n                // 最终是拿到template ， 然后去解析这个模板\r\n                const render = compileToFunction(template);\r\n                // 把render函数挂载到了 opts上面\r\n                opts.render = render;\r\n            }\r\n        }\r\n        // 组件的挂载\r\n        mountComponent(vm, el);\r\n    };\r\n}\r\n","import { initGlobalAPI } from \"./globalAPI\";\r\nimport { initMixin } from \"./init\";\r\nimport { initLifeCycle } from \"./lifecycle\";\r\nimport { initStateMixin } from \"./state\";\r\n\r\nfunction Vue(options) {\r\n    this._init(options);\r\n}\r\n\r\ninitMixin(Vue);\r\ninitLifeCycle(Vue);\r\ninitGlobalAPI(Vue);\r\ninitStateMixin(Vue);\r\n\r\nexport default Vue;\r\n\r\n// vue核心流程\r\n// 1）创造了响应式数据， 2）模板转换为ast语法树  3）将ast语法树转换为render函数\r\n// 4）运行render函数生成 虚拟dom（之后每次数据更新就执行render函数）\r\n"],"names":["starts","LIFECYCLE","forEach","hook","parent","child","concat","components","parentVal","childVal","res","Object","create","key","mergeOptions","options","mergeField","hasOwnProperty","initGlobalAPI","Vue","_base","mixin","extend","Sub","_init","prototype","constructor","component","id","definition","console","log","Dep","subs","target","addDep","watcher","push","update","stack","pushTarget","popTarget","pop","length","oldArrayProto","Array","newArrayProto","methods","method","args","result","call","ob","__ob__","inserted","slice","observeArray","dep","notify","Observer","data","defineProperty","value","enumerable","isArray","__proto__","walk","keys","defineReactive","item","observe","dependArray","i","current","depend","childOb","get","set","newValue","Watcher","vm","exprOrFn","cb","getter","renderWatcher","deps","depsId","Set","lazy","dirty","undefined","user","has","add","addSubs","queueWatcher","oldValue","queue","pending","flushSchedulerQueue","flushQueue","q","run","nextTick","callbacks","waiting","flushCallbacks","cbs","timmerFunc","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","characterData","textContent","setImmediate","setTimeout","initState","opts","$options","initData","computed","initComputed","watch","initWatch","handler","createWatcher","$watch","proxy","_data","_computedWatchers","userDef","fn","defineComputed","setter","createComputedGetter","evaluate","initStateMixin","$nextTick","ncname","qnaneCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","parseStartTag","start","match","Match","tagName","attrs","advance","attr","end","name","substring","ELEMENT_TYPE","TEXT_TYPE","currentParent","root","createASTElement","tag","children","type","node","chars","text","replace","textEnd","indexOf","startTagMatch","endTagMatch","defaultTagRE","codeGen","ast","genChildren","code","genProps","str","obj","split","JSON","stringify","map","gen","test","tokens","lastIndex","exec","index","trim","join","compileToFunction","template","render","Function","createElementVNode","isReservedTag","vnode","Ctor","createComponentVnode","init","componentInstance","componentOptions","instance","$mount","createTextVNode","isSameVnode","vnode1","vnode2","includes","createComponent","Vnode","createElm","VNode","$el","el","createElement","patchProps","appendChild","oldProps","props","oldStyles","style","newStyle","removeAttribute","styleName","setAttribute","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newelm","insertBefore","nextSibiling","removeChild","patchVnode","replaceChild","oldChildren","newChildren","updateChildren","mountChildren","innerHTML","oldStartIndex","newStartIndex","oldEndIndex","newEndIndex","oldStartVnode","newStartVnode","oldEndVnode","newEndVnode","makeIndexByKey","moveIndex","moveVnode","childElm","anchor","initLifeCycle","_update","preVnode","_vnode","_render","_c","arguments","_v","_s","mountComponent","updateComponent","callHook","handlers","initMixin","querySelector","outerHTML"],"mappings":"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"}